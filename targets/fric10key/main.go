package main

import (
	"context"
	_ "embed"
	"log"
	"machine"
	"machine/usb"

	keyboard "github.com/sago35/tinygo-keyboard"
	"github.com/sago35/tinygo-keyboard/keycodes/jp"
)

//go:embed vial.json
var def []byte

func main() {
	usb.Product = "fric10key-0.1.0"

	err := run()
	if err != nil {
		log.Fatal(err)
	}
}

func run() error {
	d := keyboard.New()

	colPins := []machine.Pin{
		machine.D9,
		machine.D8,
		machine.D7,
		machine.D6,
	}

	rowPins := []machine.Pin{
		machine.D0,
		machine.D1,
		machine.D2,
		machine.D3,
		machine.D4,
		machine.D5,
		machine.D10,
	}

	d.AddMatrixKeyboard(colPins, rowPins, [][]keyboard.Keycode{
		{
			jp.KeyF10, jp.KeyPageUp, jp.KeyUp, jp.KeyPageDown,
			jp.KeyF12, jp.KeyLeft, jp.KeyDown, jp.KeyRight,

			jp.KeyTab, jp.KeypadSlash, jp.KeypadAsterisk, jp.KeyBackspace,
			jp.Keypad7, jp.Keypad8, jp.Keypad9, jp.KeypadMinus,
			jp.Keypad4, jp.Keypad5, jp.Keypad6, jp.KeypadPlus,
			jp.Keypad1, jp.Keypad2, jp.Keypad3, jp.KeypadEnter,
			jp.Keypad0, jp.Key0, jp.KeypadPeriod, 0,
		},
		{
			jp.KeyF10, jp.KeyPageUp, jp.KeyUp, jp.KeyPageDown,
			jp.KeyF12, jp.KeyLeft, jp.KeyDown, jp.KeyRight,

			jp.KeyTab, jp.KeypadSlash, jp.KeypadAsterisk, jp.KeyBackspace,
			jp.Keypad7, jp.Keypad8, jp.Keypad9, jp.KeypadMinus,
			jp.Keypad4, jp.Keypad5, jp.Keypad6, jp.KeypadPlus,
			jp.Keypad1, jp.Keypad2, jp.Keypad3, jp.KeypadEnter,
			jp.Keypad0, jp.Key0, jp.KeypadPeriod, 0,
		},
	})

	// for Vial
	keyboard.KeyboardDef = []byte{0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00, 0x00, 0x04, 0xE6, 0xD6, 0xB4, 0x46, 0x02, 0x00, 0x21, 0x01, 0x16, 0x00, 0x00, 0x00, 0x74, 0x2F, 0xE5, 0xA3, 0xE0, 0x01, 0x4D, 0x00, 0xC2, 0x5D, 0x00, 0x3D, 0x88, 0x89, 0xC6, 0x54, 0x36, 0xC3, 0x17, 0x4F, 0xE4, 0xFA, 0x84, 0x23, 0x76, 0xB7, 0xFC, 0x71, 0xB0, 0xCD, 0xA7, 0xB6, 0x4B, 0x88, 0x71, 0x53, 0x05, 0x81, 0x49, 0xAB, 0x2B, 0xEF, 0xF4, 0x9E, 0x19, 0x5A, 0x50, 0x3F, 0x4B, 0x6D, 0x55, 0x1E, 0x51, 0xB1, 0xF5, 0x89, 0x00, 0x5C, 0x0D, 0x02, 0xFA, 0xC7, 0x31, 0xFE, 0xC0, 0xB2, 0xA2, 0x91, 0x7D, 0x62, 0xE6, 0xEA, 0xD2, 0x35, 0xA7, 0xE7, 0xA1, 0x84, 0x9D, 0x6E, 0x17, 0x6E, 0x0D, 0xD5, 0xA7, 0x2B, 0xA7, 0x85, 0x31, 0xCF, 0x58, 0xBC, 0x07, 0xED, 0xB2, 0x2A, 0x40, 0x6E, 0x92, 0x3A, 0x88, 0xE3, 0xB8, 0x8F, 0xB1, 0xD9, 0x7E, 0x40, 0xC3, 0xD1, 0xDE, 0xFB, 0xE6, 0xE6, 0xC3, 0x56, 0xD3, 0x17, 0xAE, 0xEA, 0xED, 0xD7, 0xF6, 0xDF, 0x11, 0x03, 0x82, 0x80, 0x5B, 0x65, 0x5E, 0x50, 0x5F, 0x38, 0xD7, 0x12, 0x56, 0x45, 0xB4, 0xBD, 0x7D, 0xDD, 0xE9, 0x29, 0x46, 0xCB, 0xF2, 0x7B, 0x06, 0x3F, 0x1D, 0x3F, 0xA2, 0x3E, 0xC7, 0x97, 0x5B, 0x4B, 0x7F, 0xA9, 0xE4, 0x27, 0x3C, 0xD5, 0x23, 0x6D, 0x9A, 0x24, 0xEE, 0x24, 0x6B, 0x9D, 0x82, 0x34, 0x88, 0xEA, 0xFC, 0xAC, 0xEF, 0x29, 0x91, 0xEB, 0xEF, 0x6F, 0x6F, 0x20, 0x67, 0xD0, 0x51, 0x4D, 0x10, 0x14, 0xD5, 0x7C, 0x8D, 0x5C, 0xA2, 0xEE, 0xDF, 0xAC, 0xE0, 0x3F, 0x3F, 0xA1, 0x9A, 0x00, 0x00, 0x00, 0x02, 0xE7, 0x92, 0x50, 0x81, 0xF1, 0x26, 0x8D, 0x00, 0x01, 0xDE, 0x01, 0xCE, 0x02, 0x00, 0x00, 0x69, 0xCD, 0x17, 0x43, 0xB1, 0xC4, 0x67, 0xFB, 0x02, 0x00, 0x00, 0x00, 0x00, 0x04, 0x59, 0x5A}

	d.Debug = true
	return d.Loop(context.Background())
}
